{"version":3,"sources":["reducers/authReducer.js","reducers/index.js","actions/types.js","reducers/streamReducer.js","apis/streams.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","index.js"],"names":["INITIAL_STATE","isSignedIn","userId","combineReducers","auth","state","action","type","payload","form","formReducer","streams","_","mapKeys","id","omit","axios","create","baseURL","createBrowserHistory","fetchStream","dispatch","a","get","response","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onFormSubmit","formValues","props","onSubmit","this","handleSubmit","Field","name","component","React","Component","reduxForm","validate","title","description","StreamCreate","createStream","connect","getState","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","pick","ownProps","patch","Modal","ReactDOM","createPortal","onClick","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","player","flv","createPlayer","url","status","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.d6adebaa.chunk.js","sourcesContent":["import { SIGN_IN, SIGN_OUT } from '../actions/types'\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload }\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport authReducer from './authReducer'\r\nimport streamReducer from './streamReducer'\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n})","export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\nexport const CREATE_STREAM = 'CREATE_STREAM'\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS'\r\nexport const FETCH_STREAM = 'FETCH_STREAM'\r\nexport const EDIT_STREAM = 'EDIT_STREAM'\r\nexport const DELETE_STREAM = 'DELETE_STREAM'","import _ from 'lodash'\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM,\r\n} from '../actions/types'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') }\r\n        case FETCH_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload }\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload }\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload }\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:5000\"\r\n})","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM,\r\n} from './types'\r\nimport streams from '../apis/streams'\r\nimport history from '../history'\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = (formValues) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await streams.post('/streams', { ...formValues, userId })\r\n    dispatch({ type: CREATE_STREAM, payload: response.data })\r\n    history.push('/')\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams')\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`)\r\n    dispatch({ type: FETCH_STREAM, payload: response.data })\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues)\r\n    dispatch({ type: EDIT_STREAM, payload: response.data })\r\n    history.push('/')\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`)\r\n    dispatch({ type: DELETE_STREAM, payload: id })\r\n    history.push('/')\r\n}\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nclass StreamForm extends React.Component {\r\n\r\n    renderError({ error, touched }) {\r\n        if (error && touched) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\r\n        return (\r\n            <div className={className} >\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onFormSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onFormSubmit)}>\r\n                <Field name=\"title\" component={this.renderInput} label=\"Stream Title\" />\r\n                <Field name=\"description\" component={this.renderInput} label=\"Stream Description\" />\r\n                <button className=\"ui primary button\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const error = {}\r\n    if (!formValues.title) error.title = \"You must enter a title\"\r\n    if (!formValues.description) error.description = \"You must enter a description\"\r\n    return error\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStream } from '../../actions'\r\nimport StreamForm from './StreamForm'\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n    onFormSubmit = (formValues) => {\r\n        this.props.createStream(formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create A Stream</h3>\r\n                <StreamForm onSubmit={this.onFormSubmit}></StreamForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { createStream })(StreamCreate)","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream, editStream } from '../../actions'\r\nimport StreamForm from './StreamForm'\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    onFormSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm\r\n                    initialValues={ //special variable for redux\r\n                        _.pick(this.props.stream, 'title', 'description')\r\n                    }\r\n                    onSubmit={this.onFormSubmit}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport history from '../history'\r\n\r\nconst Modal = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            onClick={() => history.push('/')}\r\n            className=\"ui dimmer modals visible active\"\r\n        >\r\n            <div\r\n                onClick={e => e.stopPropagation()}\r\n                className=\"ui standard modal visible active\"\r\n            >\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">\r\n                    {props.content}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport Modal from '../Modal'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream, deleteStream } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass StreamDelete extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    renderActions() {\r\n        const { id } = this.props.match.params\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => { this.props.deleteStream(id) }} className=\"ui negative button\">Delete</button>\r\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n\r\n    renderContent() {\r\n        if (!this.props.stream) {\r\n            return \"Are you sure you want to delete this stream?\"\r\n        }\r\n        return `Are you sure you want to delete this stream with title: ${this.props.stream.title}`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < Modal\r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                actions={this.renderActions()}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStreams } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStreams()\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated button\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned camera icon\"></i>\r\n                    <Link to={`/streams/show/${stream.id}`} className=\"content\">\r\n                        <div className=\"header\">\r\n                            {stream.title}\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            {stream.description}\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"ui button primary\" to=\"/streams/new\">Create Stream</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">\r\n                    {this.renderList()}\r\n                </div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)","import React from 'react'\r\nimport flv from 'flv.js'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream } from '../../actions'\r\n\r\nclass StreamShow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.videoRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.fetchStream(id)\r\n        this.player = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        })\r\n        this.status = this.player.attachMediaElement(this.videoRef.current)\r\n        this.player.load()\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //         this.player.destroy()\r\n    // }\r\n\r\n    renderContent() {\r\n        if (!this.props.stream) {\r\n            return (<div>Loading...</div>)\r\n        }\r\n        const { title, description } = this.props.stream\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{ width: '100%' }} controls />\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../actions'\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '346542045486-eskato7uehul8cdjsvqmn8e46vojuip1.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance()\r\n                this.onAuthChange(this.auth.isSignedIn.get())\r\n                this.auth.isSignedIn.listen(this.onAuthChange)\r\n            })\r\n        })\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId())\r\n        } else {\r\n            this.props.signOut()\r\n        }\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn()\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut()\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button\r\n                    className=\"ui red google button\"\r\n                    onClick={this.onSignOutClick}\r\n                >\r\n                    <i className=\"google icon\"></i>\r\n                    Sign Out\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button\r\n                    className=\"ui blue google button\"\r\n                    onClick={this.onSignInClick}\r\n                >\r\n                    <i className=\"google icon\"></i>\r\n                    Sign in with Google\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\">{this.renderAuthButton()}</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return { isSignedIn: auth.isSignedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport GoogleAuth from './GoogleAuth'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                StreaMy\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to='/' className=\"item\">\r\n                    All streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport StreamCreate from './streams/StreamCreate'\r\nimport StreamEdit from './streams/StreamEdit'\r\nimport StreamDelete from './streams/StreamDelete'\r\nimport StreamList from './streams/StreamList'\r\nimport StreamShow from './streams/StreamShow'\r\nimport Header from './Header'\r\nimport history from '../history'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/' exact component={StreamList} />\r\n                    <Route path='/streams/new' exact component={StreamCreate} />\r\n                    <Route path='/streams/edit/:id' exact component={StreamEdit} />\r\n                    <Route path='/streams/delete/:id' exact component={StreamDelete} />\r\n                    <Route path='/streams/show/:id' exact component={StreamShow} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducers from './reducers'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport App from './components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.querySelector('#root'))"],"sourceRoot":""}